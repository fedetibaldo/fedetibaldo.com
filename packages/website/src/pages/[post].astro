---
import { getCollection } from "astro:content";
import { sidebarImageSizes, Layout } from "../features/layout";
import type { GetStaticPaths } from "astro";
import { render } from "astro:content";
import { CardList } from "../features/card-list";
import { Sidebar } from "../features/sidebar";
import type { EntryOfType } from "../helpers";

export const getStaticPaths: GetStaticPaths = async () => {
	return (
		await getCollection(
			"entries",
			(entry): entry is EntryOfType<"post"> => entry.data.type == "post",
		)
	).map((post) => ({
		params: { post: post.id },
		props: post,
	}));
};

type Props = EntryOfType<"post">;

const post = Astro.props;

const { Content } = await render(post);
---

<Layout
	mainWidth="3/5"
	title={post.data.title}
	description={post.data.description}
>
	{
		post.data.isOutdated && (
			<p class="bg-yellow-950 border-l-4 border-yellow-500 text-yellow-50 text-smallest rounded-r-xl px-4 py-3 mb-12">
				This post is outdated. The author might have changed their mind, the
				content might be too old to be relevant, or both. It's preserved here
				for archival purposes.
			</p>
		)
	}
	<article class="prose prose-lg prose-neutral prose-invert max-w-none">
		<Content />
	</article>
	<Sidebar
		isFormDisabled
		emptyFilterMessage="filter: suggested"
		slot="sidebar"
		client:idle
	>
		<CardList
			imageSizes={sidebarImageSizes}
			filter={post.data.related
				? { ids: post.data.related }
				: { tags: [post.data.tag.id, "game"], isOutdated: false }}
			limit={2}
		/>
	</Sidebar>
</Layout>
