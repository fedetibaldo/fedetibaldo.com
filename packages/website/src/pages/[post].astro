---
import { getCollection } from "astro:content";
import Layout from "../layout/Layout.astro";
import type { CollectionEntry } from "astro:content";
import type { GetStaticPaths } from "astro";
import { render } from "astro:content";
import { SidebarFilter } from "../components/sidebar-filter";
import { Entries } from "../components/entries";

export const getStaticPaths: GetStaticPaths = async () => {
	return (await getCollection("posts")).map((post) => ({
		params: { post: post.id },
		props: post,
	}));
};

type Props = CollectionEntry<"posts">;

const post = Astro.props;

const { Content } = await render(post);
---

<Layout
	mainWidth="3/5"
	title={post.data.title}
	description={post.data.description}
>
	{
		post.data.isOutdated && (
			<p class="bg-yellow-950 border-l-4 border-yellow-500 text-yellow-50 text-smallest rounded-r-xl px-4 py-3 mb-12">
				This post is outdated. The author might have changed their mind, the
				content might be too old to be relevant, or both. It's preserved here
				for archival purposes.
			</p>
		)
	}
	<article class="prose prose-lg prose-invert max-w-none">
		<Content />
	</article>
	<Fragment slot="aside">
		<SidebarFilter
			class="sticky top-0 z-10"
			emptyFilterMessage="filter: suggested"
		/>
		<Entries
			filter={/* post.data.relatedEntries
				? { ids: post.data.relatedEntries }
				:  */ { tags: [post.data.tag, "game"], isOutdated: false }}
			limit={2}
		/>
	</Fragment>
</Layout>
