---
import { generateSuffix } from "../../../helpers";

export type RadioField<T extends string = string> = {
	type: "radio";
	label: string;
	name: string;
	resetValue: T;
	value: T;
	options: { value: T; label: string; message: string | null }[];
};

export const getMessage = (field: RadioField): string | null => {
	return (
		field.options.find((option) => option.value == field.value)?.message || null
	);
};

type Props = RadioField;

const { label, name, value, options } = Astro.props;
---

<fieldset class="space-y-3">
	<legend class="font-bold leading-tightest text-smallest text-grey-500">
		{label}
	</legend>
	<div class="flex gap-2">
		{
			options.map((option) => {
				const id = `${name}-${option.value}-${generateSuffix()}`;
				return (
					<div class="flex">
						<input
							class="peer cursor-pointer"
							type="radio"
							name={name}
							id={id}
							value={option.value}
							checked={option.value == value}
						/>
						<label
							class="text-smallest leading-tightest text-grey-500 peer-checked:text-grey-200 pl-1 cursor-pointer"
							for={id}
						>
							{option.label}
						</label>
					</div>
				);
			})
		}
	</div>
</fieldset>
